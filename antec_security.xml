<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation=
       "http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-3.0.xsd"> 
	
	<global-method-security  pre-post-annotations="enabled" access-decision-manager-ref="businessAccessDecisionManager">
    	<expression-handler ref="expressionHandler"/>
    	<after-invocation-provider ref="postInvocationAdviceProvider"/>     	
    </global-method-security> 
	
    <beans:bean id="expressionHandler"
      class="com.antec.server.security.acl.AntecMethodSecurityExpressionHandler">
        <beans:property name="permissionEvaluator" ref="permissionEvaluator"/>
  	</beans:bean> 
  	
  	<beans:bean id="permissionEvaluator" class="com.antec.server.security.acl.AntecAclPermissionEvaluator">
  		<beans:constructor-arg ref="aclService"/>
      	<!--beans:property name="objectIdentityRetrievalStrategy" ref="antecObjectIdentityRetrievalStrategy"/>
      	<beans:property name="objectIdentityGenerator" ref="antecObjectIdentityRetrievalStrategy"/-->
      	<beans:property name="permissionFactory" ref="permissionFactory"/>
      	<!--beans:property name="sidRetrievalStrategy" ref="antecSidRetrievalStrategy"/-->
      	<beans:property name="permissionGrantingStrategy" ref="permissionGrantingStrategy"/> 
  	</beans:bean> 
	
	
	<beans:bean id="businessAccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <beans:property name="allowIfAllAbstainDecisions" value="true"/>
        <beans:property name="decisionVoters">
            <beans:list>
                <beans:ref local="preInvocationAuthorizationAdviceVoter"/>            
            </beans:list>
        </beans:property>
    </beans:bean>  
	
	    <beans:bean id="preInvocationAuthorizationAdviceVoter" 
    	class="org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter">
    	<beans:constructor-arg ref="expressionBasedPreInvocationAdvice"/>
    </beans:bean>
    
    <beans:bean id="expressionBasedPreInvocationAdvice" 
    	class="org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice">
    	<beans:property name="expressionHandler" ref="expressionHandler"/>
    </beans:bean>
	
	    <beans:bean id="aclService" class="com.antec.server.security.acl.AntecJdbcMutableAclService">
        <beans:constructor-arg ref="dataSource"/>
        <beans:constructor-arg ref="lookupStrategy"/>
        <beans:constructor-arg ref="aclCache"/>
        <!--beans:property name="classIdentityQuery" value="SELECT CURRVAL(pg_get_serial_sequence('acl_class', 'id'))"/>
        <beans:property name="sidIdentityQuery" value="SELECT CURRVAL(pg_get_serial_sequence('acl_sid', 'id'))"/-->
    </beans:bean>
    
    <beans:bean id="lookupStrategy" class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
        <beans:constructor-arg ref="dataSource"/>
        <beans:constructor-arg ref="aclCache"/>
        <beans:constructor-arg ref="aclAuthorizationStrategy"/>
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
        </beans:constructor-arg>
        <beans:property name="permissionFactory" ref="permissionFactory"/>
    </beans:bean>
   
   <beans:bean id="permissionFactory" class="com.antec.server.security.acl.AntecPermissionFactoryImpl">
    	<beans:constructor-arg>
            <beans:list>
            		<beans:bean class="com.antec.server.security.acl.AntecAclSystemPermissions"/>            		
         	</beans:list>
        </beans:constructor-arg>
    </beans:bean>
   
    <beans:bean id="aclAuthorizationStrategy" class="com.antec.server.security.acl.AntecAclAuthorizationStrategy">     
    </beans:bean>
	
    <!--beans:bean id="antecObjectIdentityRetrievalStrategy" class="com.antec.server.security.acl.AntecObjectIdentityRetrievalStrategy" />
    <beans:bean id="antecSidRetrievalStrategy" class="com.antec.server.security.acl.AntecSidRetrievalStrategy" /-->  

    <beans:bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
        <beans:constructor-arg>
            <beans:bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <beans:property name="cacheManager">
                    <beans:bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
                </beans:property>
                <beans:property name="cacheName" value="aclCache"/>
            </beans:bean>
        </beans:constructor-arg>
    </beans:bean>

  	<beans:bean id="permissionGrantingStrategy" class="com.antec.server.security.acl.AntecPermissionGrantingStrategyImpl">
  	</beans:bean>
    
	<beans:bean id="postInvocationAdviceProvider" 
    	class="org.springframework.security.access.prepost.PostInvocationAdviceProvider">
    	<beans:constructor-arg ref="expressionBasedPostInvocationAdvice"/>
    </beans:bean>
	
	    <beans:bean id="expressionBasedPostInvocationAdvice" 
    	class="org.springframework.security.access.expression.method.ExpressionBasedPostInvocationAdvice">
    	<beans:constructor-arg ref="expressionHandler"/>
    </beans:bean>   
	
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="userAuthenticationProvider" />
	</authentication-manager>
	
 	<beans:bean id="remoteAuthenticationManager"
		class="com.antec.server.security.RemoteUserAuthManager">
		<beans:property name="authenticationManager">
			<beans:ref bean="authenticationManager" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="userAuthenticationProvider" class="com.antec.server.security.UserAuthenticationProvider">
		<beans:property name="userDetailsService">
			<beans:ref bean="userDetailsService" />
		</beans:property>
		<beans:property name="userCache">
			<beans:bean class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
				<beans:property name="cache">
					<beans:bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
						<beans:property name="cacheManager">
							<beans:bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
						</beans:property>
						<beans:property name="cacheName" value="userCache"/>
					</beans:bean>
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="userDetailsService" class="com.antec.server.security.UserAuthenticationDetailsService">
		<beans:property name="userDao" ref="userDao"/>
	</beans:bean>

	<http create-session="always" auto-config='false' use-expressions="true">	        
    	    <intercept-url pattern="/**" access="isFullyAuthenticated()" />
			<custom-filter position="CONCURRENT_SESSION_FILTER" ref="sessionChangeDetectionFilter" />
			<session-management session-authentication-strategy-ref="sessionController"/>
    	    <http-basic />	    
   	</http>
	
	<beans:bean id="sessionChangeDetectionFilter" class="com.antec.server.security.SessionChangeDetectionFilter">
 		<beans:property name="sessionRegistry" ref="sessionRegistry"/> 		
 	</beans:bean>
		
	<beans:bean id="sessionController" class="com.antec.server.security.AntecConcurrentSessionControlStrategy">
 	  <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	  <beans:property name="maximumSessions" value="-1"/>
	  <beans:property name="exceptionIfMaximumExceeded" value="true"/>
	</beans:bean>
	
	<beans:bean id="sessionRegistry" class="com.antec.server.security.AntecSessionRegistry">
		<beans:property name="userAuthProvider" ref="userAuthenticationProvider" />
		<beans:property name="userDetailsService" ref="userDetailsService" />
	</beans:bean>
	
</beans:beans>
